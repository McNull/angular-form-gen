/*!
   angular-form-gen v0.2.0
   (c) 2016 (null) McNull https://github.com/flowingly-richard/angular-form-gen
   License: MIT
*/
!function(e){var t=e.module("fg",["dq"]);t.constant("FgField",function(t,i){this.name=this.type=t,i&&e.extend(this,i),this.displayName=this.displayName||this.type.charAt(0).toUpperCase()+this.type.substring(1)}),t.config(["$provide",function(t){t.provider("fgConfig",function(){function t(e){for(var t=n.length;t--&&n[t].type!==e;);return t}var i={enableDebugInfo:!0,validation:{messages:{},patterns:{}},fields:{templates:[],categories:{},renderInfo:{}}},n=i.fields.templates;return{debug:function(e){i.enableDebugInfo=e},fields:{add:function(e,i,a,l){if(!(e&&e.type&&i&&i.length))throw new Error("Need a valid objectTemplate and at least one category");var r=t(e.type);-1!==r?n[r]=e:n.push(e),this.category(e.type,i),this.renderInfo(e.type,a,l)},remove:function(e){var i=t(e);-1!==i&&n.splice(i,1),this.category(e),this.renderInfo(e)},get:function(e){for(var t=n.length;t--;){var i=n[t];if(i.type===e)return i}},renderInfo:function(e,t,n){i.fields.renderInfo[e]={templateUrl:t,propertiesTemplateUrl:n}},category:function(t,n){e.isArray(n)||(n=[n]),e.forEach(i.fields.categories,function(e){delete e[t]}),e.forEach(n,function(e){void 0===i.fields.categories[e]&&(i.fields.categories[e]={}),i.fields.categories[e][t]=!0})}},validation:{message:function(t,n){var a=i.validation.messages;if(e.isString(t)){if(!n)throw new Error("No message specified for "+t);a[t]=n}else e.extend(a,t)},pattern:function(t,n){e.isString(t)?i.validation.patterns[t]=n:e.extend(i.validation.patterns,t)}},$get:function(){return i}}})}]),t.config(["fgConfigProvider","FgField",function(t,i){t.validation.message({required:"A value is required for this field.",minlength:'The value does not match the minimum length{{ field.schema && (" of " + field.schema.validation.minlength + " characters" || "")}}.',maxlength:'The value exceeds the maximum length{{ field.schema && (" of " + field.schema.validation.maxlength + " characters" || "")}}.',pattern:'The value "{{ field.state.$viewValue }}" does not match the required format.',email:'The value "{{ field.state.$viewValue }}" is not a valid email address.',unique:'The value "{{ field.state.$viewValue }}" is already in use.',number:'The value "{{ field.state.$viewValue }}" is not a number.',min:'The value {{ field.schema && ("should be at least " + field.schema.validation.min) || field.state.$viewValue + " is too low" }}',max:'The value {{ field.schema && ("should be less than " + field.schema.validation.max) || field.state.$viewValue + " is too high" }}',minoptions:"At least {{ field.schema.validation.minoptions }} option(s) should be selected.",maxoptions:"No more than {{ field.schema.validation.maxoptions }} option(s) should be selected."});var n={"Text input fields":[new i("text",{displayName:"Textbox"}),new i("email"),new i("number",{validation:{maxlength:15}}),new i("password"),new i("textarea")],"Checkbox fields":[new i("checkbox",{nolabel:!0}),new i("checkboxlist",{displayName:"Checkbox List",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:{1:!0,2:!0}})],"Select input fields":[new i("radiobuttonlist",{displayName:"Radiobutton List",options:[{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:"1"}),new i("selectlist",{displayName:"Select List",options:[{value:"",text:"Select an option"},{value:"1",text:"Option 1"},{value:"2",text:"Option 2"},{value:"3",text:"Option 3"}],value:""})]};e.forEach(n,function(i,n){e.forEach(i,function(e){t.fields.add(e,n)})}),t.validation.pattern({None:void 0,Url:"^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",Domain:"^([a-z][a-z0-9\\-]+(\\.|\\-*\\.))+[a-z]{2,6}$","IPv4 Address":"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$","Email Address":"^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$",Integer:"^-{0,1}\\d+$","Positive Integers":"^\\d+$","Negative Integers":"^-\\d+$",Number:"^-{0,1}\\d*\\.{0,1}\\d+$","Positive Number":"^\\d*\\.{0,1}\\d+$","Negative Number":"^-\\d*\\.{0,1}\\d+$","Year (1920-2099)":"^(19|20)[\\d]{2,2}$",Password:"(?=.*\\d)(?=.*[!@#$%^&*\\-=()|?.\"';:]+)(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$"})}]),e.module("fg").run(["$templateCache",function(e){e.put("angular-form-gen/edit/edit.ng.html",'<div class="fg-edit row form-group" ng-form="$fg"><div class="col-sm-8"><div fg-form="" fg-edit-canvas="" fg-no-render="true"></div></div><div class="col-sm-4" ng-form="$palette" fg-null-form=""><div fg-form="" fg-edit-palette="" fg-no-render="true"></div></div></div>'),e.put("angular-form-gen/validation/summary.ng.html",'<ul class="fg-validation-summary help-block unstyled" ng-if="field.state.$invalid && field.state.$dirty"><li ng-repeat="(key, error) in field.state.$error" ng-if="error" fg-bind-expression="messages[key]"></li></ul>'),e.put("angular-form-gen/common/jsonify/jsonify.ng.html",'<div class="jsonify"><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs" type="button" title="Copy the json data." ng-click="copy()"><span class="glyphicon glyphicon-transfer"></span></button> <button class="btn btn-default btn-xs" type="button" title="Display hidden properties." ng-click="displayHidden = !displayHidden" ng-class="{ \'active\': displayHidden }"><span class="glyphicon glyphicon-eye-open"></span></button></div><pre><code>{{ jsonify | j$on:displayHidden }}</code></pre></div>'),e.put("angular-form-gen/common/tabs/tabs-pane.ng.html",'<div class="fg-tabs-pane" ng-show="tabs.active === pane"><div ng-if="tabs.active === pane || pane.renderAlways" ng-transclude=""></div></div>'),e.put("angular-form-gen/common/tabs/tabs.ng.html",'<div class="fg-tabs tabbable"><ul class="nav nav-tabs"><li ng-repeat="tab in tabs.items" ng-class="{ active: tab === tabs.active, disabled: tab.disabled }"><a href="" ng-click="tabs.activate(tab)">{{ tab.title }}</a></li></ul><div class="tab-content" ng-transclude=""></div></div>'),e.put("angular-form-gen/edit/canvas/canvas.ng.html",'<div class="fg-edit-canvas" ng-class="{ \'fg-edit-canvas-dragging\': dragging }"><fieldset><legend>Canvas</legend><div class="fg-edit-canvas-area" dq-drag-area="fg-edit-canvas" dq-drag-enter="canvasCtrl.dragEnter()" dq-drag-leave="canvasCtrl.dragLeave()" dq-drop="canvasCtrl.drop()"><div ng-if="!(schema.fields.length)"><div ng-if="!dragPlaceholder.visible" class="fg-edit-canvas-area-empty alert alert-info text-center"><p class="fg-edit-canvas-area-empty-x">X</p><p class="lead hidden-phone"><strong>Drag</strong> one of the available <strong>templates</strong> from the <strong>palette</strong> onto this <strong>canvas</strong>.</p></div></div><div ng-repeat="field in schema.fields"><div ng-class="{ \'fg-drag-placeholder-visible\' : dragPlaceholder.visible && dragPlaceholder.index === $index }" class="fg-drag-placeholder"></div><div fg-edit-canvas-field=""></div></div><div ng-class="{ \'fg-drag-placeholder-visible\': dragPlaceholder.visible && dragPlaceholder.index == schema.fields.length }" class="fg-drag-placeholder"></div></div></fieldset></div>'),e.put("angular-form-gen/edit/palette/palette.ng.html",'<div class="fg-edit-palette"><fieldset><div fg-edit-palette-categories="" data-category="selectedCategory"></div><div ng-repeat="template in templates | filter:templateFilter" class="fg-field" dq-draggable="fg-edit-canvas" dq-drag-begin="{ source: \'palette\', field: template }"><div class="fg-field-overlay"><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs btn-primary" type="button" ng-click="schemaCtrl.addField(template)" title="Add this field."><span class="glyphicon glyphicon-plus"></span></button></div></div><div fg-field="template" fg-tab-index="-1" fg-no-validation-summary="true" fg-edit-mode="true"></div></div></fieldset></div>'),e.put("angular-form-gen/field-templates/default/checkbox.ng.html",'<div class="checkbox"><label title="{{ field.schema.tooltip }}"><input fg-field-input="" id="{{ field.$_id }}" type="checkbox" tabindex="{{ tabIndex }}" ng-model="form.data[field.schema.name]"> <span ng-if="field.schema.nolabel">{{ field.schema.displayName }}</span></label></div>'),e.put("angular-form-gen/field-templates/default/checkboxlist.ng.html",'<div fg-checkboxlist="" fg-field-input="" ng-model="form.data[field.schema.name]" name="{{ field.schema.name }}"><div class="checkbox" ng-repeat="option in field.schema.options"><label title="{{ field.schema.tooltip }}"><input type="checkbox" tabindex="{{ tabIndex }}" value="{{ option.value }}" ng-model="form.data[field.schema.name][option.value]"> <span>{{option.text || option.value}}</span></label></div></div>'),e.put("angular-form-gen/field-templates/default/dropdownlist.ng.html",'<div fg-field-input="" fg-dropdown-input="field.schema.options" title="{{ field.schema.tooltip }}" id="{{ field.$_id }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="field.schema.validation.pattern"></div>'),e.put("angular-form-gen/field-templates/default/email.ng.html",'<input class="form-control" fg-field-input="" fg-update-pattern="" type="email" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="field.schema.validation.pattern">'),e.put("angular-form-gen/field-templates/default/not-in-cache.ng.html",'<div class="fg-field-not-in-cache alert alert-error"><p>No template registered in cache for field type "{{ field.type }}".</p></div>'),e.put("angular-form-gen/field-templates/default/number.ng.html",'<input class="form-control" fg-field-input="" fg-input-number="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" min="{{ field.schema.validation.min }}" max="{{ field.schema.validation.max }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="field.schema.validation.pattern">'),e.put("angular-form-gen/field-templates/default/password.ng.html",'<input class="form-control" fg-field-input="" type="password" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="field.schema.validation.pattern">'),e.put("angular-form-gen/field-templates/default/radiobuttonlist.ng.html",'<div class="radio" ng-repeat="option in field.schema.options"><label title="{{ field.schema.tooltip }}"><input fg-field-input="" type="radio" name="{{ field.schema.name }}[]" tabindex="{{ tabIndex }}" value="{{ option.value }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required"> <span>{{option.text || option.value}}</span></label></div>'),e.put("angular-form-gen/field-templates/default/selectlist.ng.html",'<select class="form-control" fg-selectlist="" fg-field-input="" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" tabindex="{{ tabIndex }}"><option ng-repeat="option in field.schema.options" value="{{ option.value }}" ng-selected="form.data[field.schema.name] === option.value">{{ option.text || option.value }}</option></select>'),e.put("angular-form-gen/field-templates/default/text.ng.html",'<input class="form-control" fg-field-input="" fg-update-pattern="" type="text" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" placeholder="{{ field.schema.placeholder }}" ng-model="form.data[field.schema.name]" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="field.schema.validation.patterns">'),e.put("angular-form-gen/field-templates/default/textarea.ng.html",'<textarea class="form-control" fg-field-input="" fg-update-pattern="" fg-placeholder="field.schema.placeholder" ng-model="form.data[field.schema.name]" id="{{ field.$_id }}" title="{{ field.schema.tooltip }}" tabindex="{{ tabIndex }}" ng-required="field.schema.validation.required" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="field.schema.validation.pattern">\n</textarea>'),e.put("angular-form-gen/form/field/field.ng.html",'<div class="fg-field-inner form-group" ng-class="{ \'fg-field-required\': fieldSchema.validation.required, \'has-error\': form.state[field.name].$invalid }"><label ng-if="!field.schema.nolabel" class="col-sm-3 control-label" for="{{ field.$_id }}">{{ fieldSchema.displayName }}</label><div class="col-sm-9" ng-class="{ \'col-sm-offset-3\': field.schema.nolabel }"><div ng-include="renderInfo.templateUrl"></div><div fg-validation-summary="" fg-validation-messages="fieldSchema.validation.messages" ng-if="!noValidationSummary"></div></div></div>'),e.put("angular-form-gen/field-templates/properties/checkbox.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"></div><div fg-property-field="fieldValue"><div class="checkbox"><label title="Set the initial value of this field."><input type="checkbox" name="fieldValue" ng-model="field.value"> Initial value</label></div></div></div>'),e.put("angular-form-gen/field-templates/properties/checkboxlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"></div></div><div fg-tabs-pane="Options"><div fg-property-field-options="multiple"></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true }"></div><div class="fg-property-field-validation"><div fg-property-field="minoptions" fg-property-field-label="Minimum options"><input type="text" fg-field-redraw="" fg-input-number="" title="The minimum number of options that should be selected." name="minoptions" ng-model="field.validation.minoptions" class="form-control"></div><div ng-if="field.validation.minoptions >= 1"><div fg-edit-validation-message="minoptions"></div></div></div><div class="fg-property-field-validation"><div fg-property-field="maxoptions" fg-property-field-label="Maximum options"><input type="text" fg-field-redraw="" fg-input-number="" title="The maximum number of options that can be selected." name="maxoptions" ng-model="field.validation.maxoptions" class="form-control"></div><div ng-if="field.validation.maxoptions >= 1"><div fg-edit-validation-message="maxoptions"></div></div></div></div>'),e.put("angular-form-gen/field-templates/properties/dropdownlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><div fg-field-input="" fg-update-pattern="" fg-dropdown-input="field.options" ng-model="field.value" ng-minlength="{{ field.schema.validation.minlength }}" ng-maxlength="{{ field.schema.validation.maxlength }}" ng-pattern="field.schema.validation.pattern"></div></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div></div>'),e.put("angular-form-gen/field-templates/properties/email.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input fg-update-pattern="" type="email" class="form-control" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="field.validation.pattern"></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div></div>'),e.put("angular-form-gen/field-templates/properties/number.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input fg-input-number="" fg-update-pattern="" class="form-control" type="text" name="fieldValue" ng-model="field.value" min="{{ field.validation.min }}" max="{{ field.validation.max }}" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="field.validation.pattern"></div></div><div fg-tabs-pane="Validation"><div class="fg-property-field-validation"><div fg-property-field="min" fg-property-field-label="Minimum value"><input fg-input-number="" fg-field-redraw="" class="form-control" type="text" name="min" title="The minimum value that should be entered" ng-model="field.validation.min"></div><div ng-if="field.validation.min >= 0"><div fg-edit-validation-message="min"></div></div></div><div class="fg-property-field-validation"><div fg-property-field="max" fg-property-field-label="Maximum value"><input fg-input-number="" fg-field-redraw="" class="form-control" type="text" name="max" title="The maximum value that should be entered" ng-model="field.validation.max"></div><div ng-if="field.validation.max >= 0"><div fg-edit-validation-message="max"></div></div></div><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div></div>'),e.put("angular-form-gen/field-templates/properties/password.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input fg-input-number="" class="form-control" type="password" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="field.validation.pattern"></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div></div>'),e.put("angular-form-gen/field-templates/properties/radiobuttonlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"></div></div><div fg-tabs-pane="Options"><div fg-property-field-options=""></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true }"></div></div>'),e.put("angular-form-gen/field-templates/properties/selectlist.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, tooltip: true }"></div></div><div fg-tabs-pane="Options"><div fg-property-field-options=""></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true }"></div></div>'),e.put("angular-form-gen/field-templates/properties/text.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><input fg-update-pattern="" type="text" class="form-control" name="fieldValue" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="field.validation.pattern"></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div></div>'),e.put("angular-form-gen/field-templates/properties/textarea.ng.html",'<div fg-tabs-pane="Properties"><div fg-property-field-common="{ fieldname: true, displayname: true, placeholder: true, tooltip: true }"></div><div fg-property-field-value=""><textarea fg-update-pattern="" name="fieldValue" class="form-control" ng-model="field.value" ng-minlength="{{ field.validation.minlength }}" ng-maxlength="{{ field.validation.maxlength }}" ng-pattern="field.validation.pattern">\n    </textarea></div></div><div fg-tabs-pane="Validation"><div fg-property-field-validation="{ required: true, minlength: true, maxlength: true, pattern: true }"></div></div>'),e.put("angular-form-gen/form/form-fields/form-fields.ng.html",'<div class="fg-form-fields"><fieldset><div ng-repeat="field in form.schema.fields"><div fg-field="field"></div></div></fieldset></div>'),e.put("angular-form-gen/edit/canvas/field/field.ng.html",'<div class="fg-field fg-field-{{ field.type }} fg-edit-canvas-field" ng-class="{ \'error\': field.$$_invalid, \'dragging\': field.$_isDragging }" dq-draggable="fg-edit-canvas" dq-drag-disabled="dragEnabled === false" dq-drag-begin="canvasCtrl.dragBeginCanvasField($index, field)" dq-drag-end="canvasCtrl.dragEndCanvasField(field)"><div class="fg-field-overlay" ng-mouseenter="dragEnabled = true" ng-mouseleave="dragEnabled = false"><div class="fg-field-overlay-drag-top" dq-drag-enter="dragPlaceholder.index = $index"></div><div class="fg-field-overlay-drag-bottom" dq-drag-enter="dragPlaceholder.index = ($index + 1)"></div><div class="btn-toolbar btn-toolbar-right"><button class="btn btn-default btn-xs" type="button" ng-disabled="field.$_displayProperties && field.$$_invalid" ng-class="{ \'active\': field.$_displayProperties }" ng-click="toggleProperties(field)" title="Configure this field."><span class="glyphicon glyphicon-wrench"></span></button> <button class="btn btn-default btn-xs" type="button" ng-click="schemaCtrl.swapFields($index - 1, $index)" ng-disabled="$index === 0" title="Move up"><span class="glyphicon glyphicon-arrow-up"></span></button> <button class="btn btn-default btn-xs" type="button" ng-click="schemaCtrl.swapFields($index, $index + 1)" ng-disabled="$index === schema.fields.length - 1" title="Move down"><span class="glyphicon glyphicon-arrow-down"></span></button> <button class="btn btn-default btn-xs btn-danger" type="button" ng-click="schemaCtrl.removeField($index)" title="Remove"><span class="glyphicon glyphicon-trash"></span></button></div></div><div ng-form="" fg-null-form=""><div fg-field="field" fg-tab-index="-1" fg-edit-mode="true" fg-no-validation-summary="true"></div></div><div class="fg-field-properties-container" ng-class="{ visible: field.$_displayProperties }"><div fg-edit-canvas-field-properties="field" ng-if="expanded"></div></div></div>'),e.put("angular-form-gen/edit/palette/categories/categories.ng.html",'<legend ng-click="paletteCategoriesMenuOpen = !paletteCategoriesMenuOpen" ng-class="{ \'open\': paletteCategoriesMenuOpen }">Palette <span class="fg-legend-extra fg-edit-palette-categories visible-xs-inline visible-md-inline visible-lg-inline">- {{ categoryName || \'All field types\' }}</span> <i class="caret"></i><ul class="dropdown-menu"><li ng-repeat="(name, category) in categories" ng-class="{ \'active\': categoryName === name }"><a ng-click="setCategory(name, category)">{{ name }}</a></li><li class="divider"></li><li ng-class="{ \'active\': !category }"><a ng-click="setCategory(null)">All field types</a></li></ul></legend>'),e.put("angular-form-gen/edit/canvas/field/properties/properties.ng.html",'<div class="fg-field-properties"><div novalidate="" ng-form="fieldPropertiesForm"><div fg-tabs="property.tabs"><div ng-include="renderInfo.propertiesTemplateUrl"></div><div fg-tabs-pane="Debug" order="1000" auto-active="false"><div data-jsonify="field"></div></div></div></div></div>'),e.put("angular-form-gen/edit/canvas/field/properties/options/options.ng.html",'<div ng-if="!field.options || field.options.length === 0" ng-click="optionsCtrl.addOption()" class="alert alert-info"><h2>No options defined</h2><p class="lead">Click here to add a new option definition to this field.</p></div><table ng-if="field.options.length > 0" class="table-field-options"><thead><tr><th></th><th>Value</th><th>Text</th><th><a href="" class="btn btn-default btn-xs" ng-click="optionsCtrl.addOption()" title="Add a new option to the list"><i class="glyphicon glyphicon-plus"></i></a></th><th class="table-field-options-padding"></th></tr></thead><tbody><tr ng-form="fieldOptionForm" ng-repeat="option in field.options" ng-class="{ \'error\': fieldOptionForm.$invalid }"><td ng-if="multiple === false"><input type="radio" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value" ng-click="optionsCtrl.toggleOption(option.value)"></td><td ng-if="multiple === true"><input type="checkbox" name="{{ field.name }}selection[]" value="{{ option.value }}" ng-model="field.value[option.value]"></td><td><input type="text" name="optionValue" ng-model="option.value" class="form-control" ng-required="field.type != \'selectlist\'"></td><td><input type="text" ng-model="option.text" class="form-control"></td><td><a href="" class="btn btn-default btn-xs" ng-click="optionsCtrl.removeOption($index)" title="Remove this option from the list"><i class="glyphicon glyphicon-trash"></i></a></td><td></td></tr></tbody></table>'),e.put("angular-form-gen/edit/canvas/field/properties/property-field/common.ng.html",'<div ng-if="fields.fieldname"><div fg-property-field="fieldName" fg-property-field-label="Name"><input type="text" class="form-control" name="fieldName" ng-model="field.name" ng-required="true" ng-pattern="/^[a-zA-Z]([\\w]+)?$/" fg-unique-field-name=""></div></div><div ng-if="fields.displayname"><div fg-property-field="displayName" fg-property-field-label="Display name"><input type="text" class="form-control" name="displayName" ng-model="field.displayName"></div></div><div ng-if="fields.placeholder"><div fg-property-field="fieldPlaceholder" fg-property-field-label="Placeholder text"><input type="text" class="form-control" name="fieldPlaceholder" ng-model="field.placeholder"></div></div><div ng-if="fields.tooltip"><div fg-property-field="fieldTooltip" fg-property-field-label="Tooltip"><input type="text" class="form-control" name="fieldTooltip" ng-model="field.tooltip"></div></div>'),e.put("angular-form-gen/edit/canvas/field/properties/property-field/field-value.ng.html",'<div ng-if="draw"><div fg-property-field="fieldValue" fg-property-field-label="Initial value"><div ng-transclude=""></div></div></div>'),e.put("angular-form-gen/edit/canvas/field/properties/property-field/property-field.ng.html",'<div class="form-group fg-property-field" ng-class="{ \'has-error\': fieldPropertiesForm[fieldName].$invalid }"><label class="col-sm-5 col-md-4 control-label">{{ fieldLabel }}</label><div class="col-sm-7 col-md-8"><div ng-transclude=""></div><div fg-validation-summary="{{ fieldName }}"></div></div></div>'),e.put("angular-form-gen/edit/canvas/field/properties/validation/validation-message.ng.html",'<div ng-form="valMsgForm"><div fg-property-field="message" fg-property-field-label="Message"><input type="text" name="message" title="{{ tooltip }}" placeholder="Optional message" ng-model="field.validation.messages[validationType]" class="form-control"></div></div>'),e.put("angular-form-gen/edit/canvas/field/properties/validation/validation.ng.html",'<div ng-if="fields.minlength" class="fg-property-field-validation"><div fg-property-field="minlength" fg-property-field-label="Minimum length"><input type="text" fg-field-redraw="" fg-input-number="" title="The minimum length of characters that should be entered." name="minlength" ng-model="field.validation.minlength" class="form-control"></div><div ng-if="field.validation.minlength >= 1"><div fg-edit-validation-message="minlength"></div></div></div><div ng-if="fields.maxlength" class="fg-property-field-validation"><div fg-property-field="maxlength" fg-property-field-label="Maximum length"><input type="text" fg-field-redraw="" fg-input-number="" title="The maximum length of characters that should be entered." name="maxlength" ng-model="field.validation.maxlength" class="form-control"></div><div ng-if="field.validation.maxlength >= 1"><div fg-edit-validation-message="maxlength"></div></div></div><div ng-if="fields.pattern" class="fg-property-field-validation"><div fg-property-field="pattern" fg-property-field-label="Pattern"><div fg-dropdown-input="patternOptions" name="pattern" title="The pattern that should match with the input value." fg-parse-pattern="" fg-field-redraw="" ng-model="field.validation.pattern"></div></div><div ng-if="field.validation.pattern.length > 0"><div fg-edit-validation-message="pattern"></div></div></div><div ng-if="fields.required" class="fg-property-field-validation"><div fg-property-field="required"><div class="checkbox"><label title="Indicates if a value is required for this field."><input type="checkbox" ng-model="field.validation.required">Required</label></div></div><div ng-if="field.validation.required"><div fg-edit-validation-message="required"></div></div></div>')}]),t.directive("fgBindExpression",["$interpolate",function(e){function t(e){for(var t=[],i=e.expressions,n=i.length;n--;){var a=i[n];a.exp&&!a.exp.match(/^\s*$/)&&t.push(a.exp)}return"["+t.join()+"]"}return function(i,n,a){function l(){o&&o(),o=void 0}function r(){n.text(d(i))}var d,o,f;i.$on("$destroy",function(){l()}),i.$watch(a.fgBindExpression,function(a){if(void 0!==a){d=e(a),n.addClass("ng-binding").data("$binding",d);var s=t(d);f!==s?(f=s,l(),o=i.$watchCollection(s,function(){r()})):r()}})}}]),t.directive("fgDropdownInput",["$compile","$document","$timeout","$parse","fgUtils",function(t,i,n,a,l){function r(t,i){var a='<div class="fg-dropdown-input input-group"><input type="text" class="form-control"/><span class="input-group-btn"><button class="btn btn-default" type="button" ng-click="dropdownToggle()"><span class="caret"></span></button></span></div>',l=e.element(a),r=l.find("input"),d=i.prop("attributes");e.forEach(d,function(e){"fg-dropdown-input"!==e.name&&"class"!==e.name&&r.attr(e.name,e.value)});{var o;l.find("button")}return t.dropdownToggle=function(){t.dropdownVisible=!t.dropdownVisible},t.$on("$destroy",function(){o&&n.cancel(o),o=void 0}),l}function d(t,i,n,r,d){var o=a(n.ngModel),f=o.assign,s='<div class="fg-dropdown" ng-class="{ \'open\': dropdownVisible }"><ul ng-if="items && items.length" class="dropdown-menu"><li ng-repeat="item in items" ng-class="{ active: item.value === getModelValue() }"><a href="" ng-click="setModelValue(item.value)">{{ item.text || item.value }}</a></li></ul></div>',g=e.element(s);t.setModelValue=function(e){t.dropdownVisible=!1;for(var i=e||"",n=r.$formatters.length;n--;){var a=r.$formatters[n],i=a(i);if(void 0===i)break}n=r.$parsers.length;for(var l=i;n--;){var a=r.$parsers[n];if(l=a(l),void 0===l)break}void 0===l?(r.$setViewValue(i),r.$render()):f(t,e)},t.getModelValue=function(){return o(t)};var p=d[0];return t.$watch("dropdownVisible",function(e){if(e){var t=p.getBoundingClientRect(),i=l.getScrollOffset();g.css({left:i.x+t.left+"px",top:i.y+t.top+p.clientHeight+"px",width:p.clientWidth+"px"})}}),t.$watchCollection(n.fgDropdownInput,function(e){t.items=e}),t.$on("$destroy",function(){g.remove()}),g}return{priority:1e3,restrict:"A",terminal:!0,scope:!0,compile:function(){return function(e,n,a){var l=r(e,n,a);n.append(l),t(l)(e);var o=l.find("input"),f=o.controller("ngModel"),s=d(e,n,a,f,l),g=t(s),p=i.find("body");p.append(s),g(e)}}}}]),t.directive("fgNullForm",function(){var t={$addControl:e.noop,$removeControl:e.noop,$setValidity:e.noop,$setDirty:e.noop,$setPristine:e.noop};return{restrict:"A",require:["form"],link:function(i,n,a,l){var r=l[0],d=n.parent().inheritedData("$formController");d&&d.$removeControl(r),e.extend(r,t)}}}),t.directive("fgFormRequiredFilter",function(){return{restrict:"A",require:["form"],link:function(e,t,i,n){var a=n[0],l=a.$setValidity;
a.$setValidity=function(e,t,i){"required"===e&&(t=!0),l.call(a,e,t,i)}}}}),t.directive("fgInputNumber",function(){return{require:"ngModel",link:function(t,i,n,a){if(a.$parsers.push(function(e){if(void 0==e)return"";var t=e.replace(/[^0-9]/g,""),i=parseInt(t);return t!=e&&(a.$setViewValue(t),a.$render()),i}),a.$parsers.push(function(e){var t=a.$isEmpty(e);return t||/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/.test(e)?(a.$setValidity("number",!0),""===e?null:t?e:parseFloat(e)):(a.$setValidity("number",!1),void 0)}),a.$formatters.push(function(e){return a.$isEmpty(e)?void 0:e}),n.min){var l=function(e){var t=parseFloat(n.min);return!a.$isEmpty(e)&&t>e?(a.$setValidity("min",!1),void 0):(a.$setValidity("min",!0),e)};a.$parsers.push(l),a.$formatters.push(l)}if(n.max){var r=function(e){var t=parseFloat(n.max);return!a.$isEmpty(e)&&e>t?(a.$setValidity("max",!1),void 0):(a.$setValidity("max",!0),e)};a.$parsers.push(r),a.$formatters.push(r)}a.$formatters.push(function(t){return a.$isEmpty(t)||e.isNumber(t)?(a.$setValidity("number",!0),t):(a.$setValidity("number",!1),void 0)})}}}),t.directive("fgPlaceholder",function(){return{link:function(e,t,i){e.$watch(i.fgPlaceholder,function(e){t.attr("placeholder",e)})}}}),t.factory("fgUtils",["$templateCache","$window","fgConfig",function(t,i,n){var a=+new Date%1e4;return{getScrollOffset:function(){var e={};if(void 0!==i.pageYOffset)e.x=i.pageXOffset,e.y=i.pageYOffset;else{var t=i.document.documentElement;e.x=t.scrollLeft,e.y=t.scrollTop}return e},defaultArea:"default",getRenderInfo:function(e){var t=n.fields.renderInfo[e.type];return t||(t={},n.fields.renderInfo[e.type]=t),t.templateUrl||(t.templateUrl=this.getTemplateUrl(e)),t.propertiesTemplateUrl||(t.propertiesTemplateUrl=this.getTemplateUrl(e,"properties")),t},formatTemplateUrl:function(e,t){return"angular-form-gen/field-templates/"+(t||this.defaultArea)+"/"+e+".ng.html"},getTemplateUrl:function(e,i){i=i||this.defaultArea;var n=e.type,a=this.formatTemplateUrl(n,i),l=t.get(a);if(!l){if("properties"===i||i===this.defaultArea)return this.formatTemplateUrl("not-in-cache");a=this.getTemplateUrl(e,this.defaultArea)}return a},getUnique:function(){return++a},copyField:function(t){var i=e.copy(t);return i.name="field"+this.getUnique(),i},findElementsByClass:function(e,t,i,n){if(n=n||[],e.className===t&&n.push(e),e.hasChildNodes())for(var a=0;a<e.children.length;a++){var l=e.children[a];l.className===t&&n.push(l),i&&this.findElementsByClass(l,t,i,n)}return n}}}]),e.module("dq",[]).factory("dqUtils",["$window","$rootScope",function(e){var t=null;return{getEvent:function(t){return t&&t.originalEvent?t.originalEvent:t||e.event},stopEvent:function(e){return e.cancelBubble=!0,e.bubbles=!1,e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),!1},dragData:function(e){return void 0===e?t:(t=e,void 0)},getParentArea:function(e){var t={};return e.$emit("dqLocateArea",t),t.name},isAreaMatch:function(e){var i=this.getParentArea(e),n=t?t.area:"";return i===n}}}]),e.module("dq").directive("dqDragArea",["dqUtils",function(){function e(e,t,i,n){n&&t&&t.area===i&&e.$eval(n)}return{restrict:"AEC",link:function(t,i,n){var a=n.dqDragArea||n.dqDragAreaName||"";t.$on("dqDragBegin",function(i,l){e(t,l,a,n.dqDragProgressBegin)}),t.$on("dqDragEnd",function(i,l){e(t,l,a,n.dqDragProgressEnd)}),t.$on("dqLocateArea",function(e,t){t.name=a,e.stopPropagation()})}}}]),e.module("dq").directive("dqDragEnter",["dqDragTrack",function(e){return{link:e}}]).directive("dqDragLeave",["dqDragTrack",function(e){return{link:e}}]).directive("dqDragOver",["dqDragTrack",function(e){return{link:e}}]).directive("dqDrop",["dqDragTrack",function(e){return{link:e}}]).factory("dqDragTrack",["dqUtils","$document",function(e,t){return function(i,n,a){function l(t){var i=e.getEvent(t),n=i.target||t.target;return n!==f&&(f.contains(n)||r(!0)),p.off("dragover",l),g=!1,i.dataTransfer.dropEffect=s,e.stopEvent(t)}function r(e){o=!1;var t=a.dqDragLeave;t&&(e?i.$apply(function(){i.$eval(t)}):i.$eval(t))}if(n.data("dqDragTrack")!==!0){var d=!1,o=!1,f=n[0],s="none",g=!1,p=t.find("body");i.$on("$destroy",function(){p.off("dragover",l)}),i.$on("dqDragBegin",function(){d=e.isAreaMatch(i)}),i.$on("dqDragEnd",function(){d&&r(!1)}),n.on("dragenter",function(){if(d&&o===!1){o=!0;var e=a.dqDragEnter;e&&i.$apply(function(){i.$eval(e)})}}),n.on("dragleave",function(){d&&o===!0&&(g=!0,p.on("dragover",l))}),n.on("dragover",function(t){if(d){var n,l=e.getEvent(t),r=a.dqDragOver;if(r&&i.$apply(function(){n=i.$eval(r)}),s=n===!1?"none":"copy",!g)return l.dataTransfer.dropEffect=s,e.stopEvent(t)}}),n.on("drop",function(t){e.getEvent(t);if(d){var n=a.dqDrop;n&&i.$apply(n)}return e.stopEvent(t)}),n.data("dqDragTrack",!0)}}}]),e.module("dq").directive("dqDraggable",["dqUtils","$rootScope",function(e,t){function i(e,i,n,a,l){n.$apply(function(){var r=n.$eval(a),d={area:i,data:r};l(d),t.$broadcast(e,d)})}return{restrict:"AEC",link:function(t,n,a){var l=a.dqDraggable||a.dqDragTargetArea||"",r=!1;t.$watch(a.dqDragDisabled,function(e){r=e,n.attr("draggable",r?"false":"true")}),n.on("selectstart",function(t){return!r&&this.dragDrop?(this.dragDrop(),t=e.getEvent(t),e.stopEvent(t)):void 0}).on("dragstart",function(n){if(n=e.getEvent(n),r)return e.stopEvent(n);var d=n.dataTransfer;d.effectAllowed="all",d.setData("Text","The cake is a lie!"),i("dqDragBegin",l,t,a.dqDragBegin,function(t){e.dragData(t)})}).on("dragend",function(){i("dqDragEnd",l,t,a.dqDragEnd,function(){e.dragData(null)})})}}}]),t.controller("fgEditController",["$scope","fgUtils","$location",function(){}]),t.directive("fgEdit",function(){return{priority:100,require:"fgSchema",restrict:"AE",scope:{schema:"=?fgSchema"},replace:!0,controller:"fgEditController as editCtrl",templateUrl:"angular-form-gen/edit/edit.ng.html",link:function(e,t,i,n){void 0===e.schema&&(e.schema={}),n.model(e.schema),e.schemaCtrl=n}}}),t.controller("fgFormController",["$scope","$parse",function(e,t){this.model={};var i=this;this.init=function(n,a,l,r){i.editMode=r;var d=t(n),o=d.assign;return e.$watch(d,function(t){void 0===t&&(t={},o&&o(e,t)),i.model.data=t}),e.$watch(function(){return a.model()},function(e){void 0===e?a.model({}):i.model.schema=e}),i.model.state=l,i.model}}]),t.directive("fgForm",["fgFormCompileFn",function(e){return{restrict:"AE",require:["^?form","fgForm","^fgSchema"],controller:"fgFormController",scope:!0,compile:e}}]).factory("fgFormLinkFn",function(){return function(e,t,i,n){var a=n[0],l=n[1],r=n[2],d="true"===i.fgNoRender;l.init(i.fgFormData,r,a,d)}}).factory("fgFormCompileFn",["fgFormLinkFn",function(e){return function(t,i){t.addClass("fg-form");var n=i.fgNoRender;if("true"!==n){var a="<div fg-form-fields></div>";t.append(a)}return e}}]),t.directive("fgValidationSummary",["fgValidationSummaryLinkFn",function(e){return{require:["^?fgField","^?form"],templateUrl:"angular-form-gen/validation/summary.ng.html",scope:{fieldName:"@?fgValidationSummary",validationMessages:"=?fgValidationMessages"},link:e}}]).factory("fgValidationSummaryLinkFn",["fgConfig",function(t){return function(i,n,a,l){var r=l[0],d=l[1];r?(i.field=r.field(),i.form=r.form()):d&&(i.form={state:d},i.$watch("fieldName",function(e){i.field={name:e,state:d[e]}})),i.validationMessages&&e.forEach(i.validationMessages,function(e,t){e||delete i.validationMessages[t]}),i.messages=e.extend({},t.validation.messages,i.validationMessages)}}]),t.directive("fgUniqueFieldName",function(){function e(e,t,i){var n,a=t.model(),l=!0;if(a)for(var r=a.fields,d=0;d<r.length;d++)if(n=r[d],n!==i&&i.name===n.name){l=!1;break}e.$setValidity("unique",l)}var t=0;return{priority:100,require:["ngModel","^fgSchema"],link:function(i,n,a,l){var r=l[0],d=l[1],o=i.field;if(!o)throw Error("No field property on scope");i.$watch(function(){return r.$modelValue},function(){++t}),i.$watch(function(){return t},function(){e(r,d,o)})}}}),t.filter("j$on",function(){function e(e,t){var i=t;return"string"==typeof e&&"$"===e.charAt(0)&&(i=void 0),"string"==typeof e&&"$"===e.charAt(0)&&"$"===e.charAt(1)&&(i=void 0),i}return function(t,i){return i?JSON.stringify(t||{},null,"  "):JSON.stringify(t||{},e,"  ")}}).directive("jsonify",["$window","$filter",function(e,t){return{templateUrl:"angular-form-gen/common/jsonify/jsonify.ng.html",replace:!0,scope:{jsonify:"=",displayHidden:"@jsonifyDisplayHidden"},link:function(i,n,a){i.expression=a.jsonify,i.copy=function(){e.prompt("Copy to clipboard: Ctrl+C, Enter",t("j$on")(i.jsonify,i.displayHidden))}}}}]),t.controller("fgTabsController",["$scope",function(e){this.items=[],this.active=null,this.activeIndex=-1,this.add=function(t){this.items.push(t),this.items.sort(function(e,t){return e.order-t.order}),e.active||0==t.autoActive||this.activate(t)},this.activate=function(t){var i,n=-1;if(isNaN(t)){i=t;for(var a=this.items.length;a--;)if(this.items[a]===i){n=a;break}if(-1===n)throw new Error("Cannot activate pane: not found in pane list.")}else{if(n=t,0>n||n>=this.items.length)throw new Error("Cannot activate pane: index out of bounds.");i=this.items[n]}i.disabled||(this.active=e.active=i,this.activeIndex=e.activeIndex=n)}}]),t.directive("fgTabs",function(){return{require:["fgTabs"],restrict:"EA",transclude:!0,controller:"fgTabsController",templateUrl:"angular-form-gen/common/tabs/tabs.ng.html",scope:{tabs:"=?fgTabs",active:"=?fgTabsActive",activeIndex:"=?fgTabsActiveIndex"},link:function(e,t,i,n){e.tabs=n[0],e.$watch("activeIndex",function(t){void 0!==t&&e.tabs.activeIndex!==t&&e.tabs.activate(t)})}}}),t.directive("fgTabsPane",["fgTabsPaneLinkFn",function(e){return{require:["^fgTabs"],restrict:"EA",transclude:!0,templateUrl:"angular-form-gen/common/tabs/tabs-pane.ng.html",link:e,scope:!0}}]).factory("fgTabsPaneLinkFn",function(){return function(e,t,i,n){e.tabs=n[0],e.pane={title:i.fgTabsPane||i.title,order:parseInt(i.fgTabsPaneOrder||i.order)||10,autoActive:!("false"===i.fgTabsPaneAutoActive||"false"===i.autoActive),renderAlways:"true"===i.fgTabsPaneRenderAlways||"true"===i.renderAlways},e.$watch(i.fgTabsPaneDisabled,function(t){e.pane.disabled=t}),e.tabs.add(e.pane)}}),t.controller("fgEditCanvasController",["$scope","dqUtils","$timeout","fgUtils",function(e,t,i){e.dragPlaceholder={visible:!1,index:0},e.$on("dqDragBegin",function(){e.dragging=!0}),e.$on("dqDragEnd",function(){e.dragging=!1}),this.dragEnter=function(){e.dragPlaceholder.visible=!0,e.dragPlaceholder.index=e.schema.fields.length},this.dragLeave=function(){e.dragPlaceholder.visible=!1},this.dragBeginCanvasField=function(e,t){return i(function(){t.$_isDragging=!0},1),{source:"canvas",field:t,index:e}},this.dragEndCanvasField=function(e){i(function(){e.$_isDragging=!1},10)},this.drop=function(){var i=t.dragData();if(!i||!i.data)throw Error("Drop without data");{var n=i.data.field,a=i.data.source,l=i.data.index;e.schema.fields}"palette"==a?e.schemaCtrl.addField(n,e.dragPlaceholder.index):"canvas"==a&&e.schemaCtrl.moveField(l,e.dragPlaceholder.index),n.$_isDragging=!1}}]),t.directive("fgEditCanvas",function(){return{require:["^fgEdit","^fgSchema","^form"],templateUrl:"angular-form-gen/edit/canvas/canvas.ng.html",controller:"fgEditCanvasController as canvasCtrl",link:function(e,t,i,n){e.editCtrl=n[0],e.schemaCtrl=n[1],e.formCtrl=n[2];var a=!0;e.$watchCollection("schema.fields",function(){a||e.formCtrl.$setDirty(!0),a=!1})}}}),t.controller("fgEditPaletteController",["$scope","fgConfig",function(t,i){t.templates=[];for(var n=i.fields.templates,a=n.length;a--;){var l=n[a];l.editor&&0==l.editor.visible||t.templates.unshift(e.copy(l))}t.templateFilter=function(e){return!t.selectedCategory||t.selectedCategory[e.type]}}]),t.directive("fgEditPalette",function(){return{require:["^fgSchema"],templateUrl:"angular-form-gen/edit/palette/palette.ng.html",controller:"fgEditPaletteController",link:function(e,t,i,n){e.schemaCtrl=n[0]}}}),t.directive("fgCheckboxlist",function(){function e(e,t,i){var n=e?e.required:!1;if(n){for(var a=i.length;a--;)if(t[i[a].value])return!0;return!1}return!0}function t(e){var t=0;for(var i in e)e[i]&&(t+=1);return t}return{require:["^fgField"],link:function(i,n,a,l){var r=l[0].field(),d=i.form.data,o=r.schema;i.$watchCollection(function(){return d[o.name]},function(i,n){if(r.state.$dirty||i===n||r.state.$setViewValue(i),o.validation){var a=e(o.validation,i,o.options);r.state.$setValidity("required",a);var l=o.validation.minoptions,d=o.validation.maxoptions,f=!0,s=!0;if(l||d){var g=t(i);l&&(f=g>=o.validation.minoptions),d&&(s=g<=o.validation.maxoptions)}r.state.$setValidity("minoptions",f),r.state.$setValidity("maxoptions",s)}})}}}),t.directive("fgSelectlist",["$timeout",function(t){return{priority:1e3,link:function(i,n){t(function(){for(var t=n.find("option"),i=t.length;--i>=0;){var a=e.element(t[i]);if("? undefined:undefined ?"==a.val()){a.remove();break}}},0)}}}]),t.controller("fgFieldController",["$scope","fgUtils",function(t,i){var n,a,l=this;this.init=function(e,i,r){l.initForm(e),l.initField(i),l.initDefaultData(i,r),t.form=n,t.field=a},this.initForm=function(e){return n=e?e.model:{}},this.initField=function(e){return a={$_id:"id"+i.getUnique(),schema:e},t.$watch("field.schema.name",function(e){l.registerState(e)}),a},this.initDefaultData=function(i,a){var l=i.name;return n.data=n.data||{},a?(t.$watch("field.schema.value",function(e){n.data[i.name]=e}),t.$watch("field.schema.name",function(e,t){if(e!==t){var i=n.data[t];delete n.data[t],n.data[e]=i}})):n.data&&void 0===n.data[l]&&void 0!==i.value&&(n.data[l]=e.copy(i.value)),n.data},this.setFieldState=function(e){a.state=e,l.registerState(a.schema.name)},this.registerState=function(e){n.state&&a.state&&(n.state.$removeControl(a.state),a.state.$name=e,n.state.$addControl(a.state)),a.name=e},this.field=function(){return a},this.form=function(){return n}}]),t.directive("fgField",["fgFieldLinkFn",function(e){return{require:["^?fgForm","fgField"],replace:!0,templateUrl:"angular-form-gen/form/field/field.ng.html",scope:{fieldSchema:"=fgField",tabIndex:"=?fgTabIndex",editMode:"=?fgEditMode",noValidationSummary:"=fgNoValidationSummary"},controller:"fgFieldController",link:e}}]).factory("fgFieldLinkFn",["fgUtils",function(e){return function(t,i,n,a){var l=a[0],r=a[1];void 0===t.tabIndex&&(t.tabIndex="auto"),t.renderInfo=e.getRenderInfo(t.fieldSchema),r.init(l,t.fieldSchema,t.editMode)}}]),t.directive("fgFieldInput",["fgFieldInputLinkFn",function(e){return{require:["^fgField","ngModel"],link:e}}]).factory("fgFieldInputLinkFn",function(){return function(e,t,i,n){var a=n[0],l=n[1];a.setFieldState(l)}}).factory("fgUpdatePattern",function(){return{require:"^ngModel",link:function(e,t,i,n){e.$watch(function(){return alert("attrs.ngPattern",i.ngPattern),e.$eval(i.ngPattern)},function(e,t){return alert("newval",e),alert("oldval",t),value=n.$viewValue,n.$isEmpty(value)||e.test(value)?(n.$setValidity("pattern",!0),value):(n.$setValidity("pattern",!1),void 0)})}}}),t.directive("fgFormFields",function(){return{require:["^?fgForm"],restrict:"AE",templateUrl:"angular-form-gen/form/form-fields/form-fields.ng.html",scope:{},link:function(e,t,i,n){var a=n[0];e.$watch(function(){return a.model},function(t){e.form=t})}}}),t.controller("fgSchemaController",["$scope","fgUtils",function(t,i){var n;this.model=function(t){return void 0!==t&&(n=t,e.isArray(t.fields)||(t.fields=[])),n},this.addField=function(e,t){var a=i.copyField(e);t=void 0===t?n.fields.length:t,n.fields.splice(t,0,a)},this.removeField=function(e){n.fields.splice(e,1)},this.swapFields=function(e,t){-1>=e||-1>=t||e>=n.fields.length||t>=n.fields.length||(n.fields[e]=n.fields.splice(t,1,n.fields[e])[0])},this.moveField=function(e,t){if(e>=0&&t<=n.fields.length&&e!==t){var i=n.fields.splice(e,1)[0];t>e&&--t,n.fields.splice(t,0,i)}}}]),t.directive("fgSchema",["fgSchemaLinkFn",function(e){return{require:["fgSchema"],controller:"fgSchemaController",link:e}}]).factory("fgSchemaLinkFn",function(){return function(e,t,i,n){var a=n[0];e.$watch(i.fgSchema,function(e){a.model(e)})}}),t.directive("fgEditCanvasField",["$timeout",function(e){return{templateUrl:"angular-form-gen/edit/canvas/field/field.ng.html",link:function(t){t.toggleProperties=function(e){e.$_displayProperties=e.$_displayProperties?e.$$_invalid:!0},t.$watch("field.$_displayProperties",function(i){i?t.expanded=!0:e(function(){t.expanded=!1},550)})}}}]),t.controller("fgEditPaletteCategoriesController",["$scope","fgConfig",function(e,t){if(e.categories=t.fields.categories,e.setCategory=function(t,i){e.categoryName=t,e.category=i},!e.category)for(var i in e.categories){e.setCategory(i,e.categories[i]);break}}]),t.directive("fgEditPaletteCategories",function(){return{templateUrl:"angular-form-gen/edit/palette/categories/categories.ng.html",require:"^fgEditPalette",scope:{category:"=?"},controller:"fgEditPaletteCategoriesController"}}),t.directive("fgEditCanvasFieldProperties",["fgUtils",function(e){function t(e){for(var t=e.length;t--;){var i=e[t];"Debug"!==i.title&&(i.renderAlways=!0)}}return{templateUrl:"angular-form-gen/edit/canvas/field/properties/properties.ng.html",scope:{field:"=fgEditCanvasFieldProperties"},link:{pre:function(e){e.property={}},post:function(i){i.$watch("fieldPropertiesForm.$invalid",function(e){i.field.$$_invalid=e}),i.renderInfo=e.getRenderInfo(i.field),i.$watch("property.tabs.items.length",function(e){e&&t(i.property.tabs.items)})}}}}]),t.controller("fgPropertyFieldOptionsController",["$scope",function(t){function i(e,i){e!==i&&(t.multiple?(t.field.value[e]=t.field.value[i],delete t.field.value[i]):i===t.field.value&&(t.field.value=e))}var n=1;t.$watchCollection("field.options",function(n){n&&e.forEach(n,function(e){e.$_valueWatchFn||(e.$_valueWatchFn=t.$watch(function(){return e.value},i))})}),this.toggleOption=function(e){"selectlist"!==t.field.type&&e===t.field.value&&(t.field.value=void 0)},this.addOption=function(){t.field.options||(t.field.options=[]);var e={value:"Option "+n++};t.field.options.push(e);var i=t.field.options.length;t.multiple||1!==i||(t.field.value=e.value)},this.removeOption=function(e){var i=t.field.options.splice(e,1);if(i&&i.length){var n=i[0];t.multiple?void 0!==t.field.value[n.value]&&delete t.field.value[n.value]:(n.value===t.field.value&&t.field.options.length&&(t.field.value=t.field.options[0].value),n.$_valueWatchFn())}}}]),t.directive("fgPropertyFieldOptions",["fgPropertyFieldOptionsLinkFn",function(e){return{scope:!0,controller:"fgPropertyFieldOptionsController as optionsCtrl",templateUrl:"angular-form-gen/edit/canvas/field/properties/options/options.ng.html",link:e}}]).factory("fgPropertyFieldOptionsLinkFn",function(){return function(e,t,i){e.multiple=!1,i.$observe("fgPropertyFieldOptions",function(t){"multiple"===t&&(e.multiple=!0)})}}),t.directive("fgPropertyFieldCommon",["fgPropertyFieldCommonLinkFn",function(e){return{restrict:"AE",templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/common.ng.html",link:e}}]).factory("fgPropertyFieldCommonLinkFn",function(){return function(t,i,n){t.fields={fieldname:!1,displayname:!1,placeholder:!1,tooltip:!1,focus:!1},t.$watch(n.fgPropertyFieldCommon,function(i){t.fields=e.extend(t.fields,i)})}}),t.directive("fgPropertyFieldValue",["fgPropertyFieldValueLinkFn",function(e){return{require:["^form"],templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/field-value.ng.html",transclude:!0,link:e}}]).factory("fgPropertyFieldValueLinkFn",["$parse",function(){return function(e,t,i,n){e.draw=!0;var a,l=n[0];e.$watch("field.$_redraw",function(i){if(i){var n=l.fieldValue;n&&(a=n.$viewValue),e.draw=!1,e.field.$_redraw=!1}else e.draw=!0,t=t}),e.$watch(function(){return l.fieldValue},function(e){e&&a&&(e.$setViewValue(a),e.$render(),a=void 0)})}}]).directive("fgFieldRedraw",function(){return{require:["ngModel"],link:function(e,t,i){var n=e.$eval(i.ngModel);e.$watch(i.ngModel,function(t){t!=n&&(e.field.$_redraw=!0,n=t)})}}}),t.directive("fgPropertyField",["fgPropertyFieldLinkFn",function(e){return{restrict:"AE",templateUrl:"angular-form-gen/edit/canvas/field/properties/property-field/property-field.ng.html",transclude:!0,scope:!0,link:e}}]).factory("fgPropertyFieldLinkFn",function(){return function(e,t,i){i.$observe("fgPropertyField",function(t){e.fieldName=t}),i.$observe("fgPropertyFieldLabel",function(t){t&&(e.fieldLabel=t)})}}),t.directive("fgParsePattern",function(){return{require:["ngModel"],link:function(e,t,i,n){function a(e){try{new RegExp(e)}catch(t){return l.$setValidity("pattern",!1),void 0}return l.$setValidity("pattern",!0),e}var l=n[0];l.$parsers.push(a)}}}),t.directive("fgPropertyFieldValidation",["fgPropertyFieldValidationLinkFn",function(e){return{restrict:"A",templateUrl:"angular-form-gen/edit/canvas/field/properties/validation/validation.ng.html",link:e}}]).factory("fgPropertyFieldValidationLinkFn",["fgConfig",function(t){var i=[],n=t.validation.patterns;return e.forEach(n,function(e,t){i.push({value:e,text:t})}),function(t,n,a){t.patternOptions=i,t.field.validation=t.field.validation||{},t.field.validation.messages=t.field.validation.messages||{},t.fields={required:!1,minlength:!1,maxlength:!1,pattern:!1},t.$watch(a.fgPropertyFieldValidation,function(i){t.fields=e.extend(t.fields,i)})}}]),t.directive("fgEditValidationMessage",["fgEditValidationMessageLinkFn",function(e){return{templateUrl:"angular-form-gen/edit/canvas/field/properties/validation/validation-message.ng.html",link:e,scope:!0}}]).factory("fgEditValidationMessageLinkFn",function(){var e="Enter a error message here that will be shown if this validation fails. If this field is empty a default message will be used.";return function(t,i,n){n.$observe("fgEditValidationMessage",function(e){t.validationType=e}),n.$observe("fgEditValidationTooltip",function(i){i=i||e,t.tooltip=i})}})}(angular);
//# sourceMappingURL=angular-form-gen.min.js.map